1. Introduction
This repository provides a template for assessment 2, major exploitation task. The contents of the repository is listed in Table 1.

Table 1. Directory layout for submission.
Directory	Contents
/app

Source code for a vulnerable application.

/exploit

Python scripts, demonstrating bypass techniques for at least one security control.

Tasks:

Perform a git clone of the repository.

Replace the contents with your vulnerable application, and retain the folder structure as per Table 1.

Write a Makefile, which will be used to compile your vulnerable application.

Provide instructions on how to build, execute, and exploit the application in Section 2 and Section 3.

Indicate in your submission the operating system and CPU architecture where your application should be built, and is vulnerable.

Restrictions:

Your vulnerable application should compile and execute within an x86 or AMD64/Intel64 virtual machine. It is recommended you target either the Kali Linux 2022.3 or Windows 7 Professional (SP1) operating system.

Alternatively, if targeting another operating system. Include a Vagrantfile and provisioning scripts to build the virtual machine.

Use Asciidoctor, or Markdown, to document your submission.

Tips:

If not familiar with Asciidoctor the document editor AsciidocFX can help ensure the formatting of the document is valid.

For Markdown, the visual editor typora provides a similar capability.

Windows 7 Professional (SP1) ISO images are available to download for a 32-bit or 64-bit CPU architecture. The SHA1 hash values of these ISO images have been verified against values posted here.

2. Application
2.1. Dependencies
List any third-party dependencies required to build the application here…​

2.2. Compiling
List steps, and any assumptions, to build the application here…​

2.3. Execution
List steps, and any assumptions, to execute the application here…​

3. Exploit
3.1. Exploit 1
Describe the bypassed security control for this exploit. Include the steps to demonstrate the bypass technique. If including video commentary, include a link to it.

3.2. Exploit 2
As above, but for any additional bypassed security controls.
